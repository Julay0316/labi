<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://code.alibabatech.com/schema/dubbo
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
 
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:service.properties</value>
            </list>
        </property>
    </bean>
    
    <!--<import resource="mysql.xml"/>-->
    <!--<import resource="redis.xml"/>-->
    <context:annotation-config />
    <context:component-scan base-package="com.labi.itfin" >
    </context:component-scan>
    
    <dubbo:application name="xxxxx.service.xxx" owner="horizen" />
    <dubbo:consumer filter="dubboConsumerFilter" />
    <dubbo:provider token="${dubbo.provider.token}"
    	retries="${dubbo.provider.retries}"
    	actives="${dubbo.provider.actives}"
        threads="${dubbo.provider.threads}"
    	threadpool="${dubbo.provider.threadpool}"
        filter="dubboProviderFilter"/>
    <!--filter="DubboProviderContextSwitchFilter"
    	timeout="${dubbo.provider.timeout}"-->


    <dubbo:protocol accesslog="${dubbo.protocol.access}"  />

    <dubbo:registry file="${dubbo.registry.file}" protocol="zookeeper" address="${dubbo.registry.address.zk}"  />

</beans>
